[{"data":1,"prerenderedAt":40},["Reactive",2],{"search-api":3},[4,11,20,28],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Home",[],"     File-Sys-Cache   File-Sys-Cache is an npm package that provides a simple and efficient system files-based caching solution for Node.js applications.      Set Cache   Get Cached Data   Invalidate Cached Data   Flush Cache by Regex   Flush Whole Cache   Monitoring      What's included      Set Cache   Store data in the cache with options to specify file name prefix, file name, payload, and time-to-live (TTL).    Get Cached Data   Retrieve cached data by providing the corresponding file name or prefix.    Invalidate Cached Data   Automatically invalidate cached data for items with expired TTLs.    Flush Cache by Regex   Flush cache entries that match a given regular expression.    Flush Whole Cache   Clear the entire cache, removing all stored entries.    Monitoring   Monitor cache usage and performance statistics, including invalidated files count, logs over time, size over time, and request count.",{"id":12,"path":13,"dir":14,"title":15,"description":16,"keywords":17,"body":19},"content:1.introduction:1.getting-started.md","/introduction/getting-started","introduction","Getting Started","File-Sys-Cache is an npm package that provides a simple and efficient system files-based caching solution for Node.js applications.",[18],"How to install?","  Getting Started  File-Sys-Cache is an npm package that provides a simple and efficient system files-based caching solution for Node.js applications.  How to install?  Install File-Sys-Cache via npm:     npm   install   file-sys-cache\n   ðŸ›ˆ Node 20.x or greater is preferred  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":21,"path":22,"dir":14,"title":23,"description":24,"keywords":25,"body":27},"content:1.introduction:2.configuration.md","/introduction/configuration","Configuration","Minimal usage",[26],"Hash Options","  Configuration  Minimal usage     import   { FileSysCache }   from   'file-sys-cache'\n   \n   const   cache   =   new   FileSysCache  ({\n       basePath:   './.file-sys-cache'\n   });\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Key   Type   Default   Description     basePath   string  ./.file-sys-cache  Directory where cache will be stored    defaultTTL   number  60  Expiration time in seconds    hash   THashOptions  sha256  Hashing algorithm    debug   boolean  false  Enables debug mode    autoInvalidate   boolean  false  Auto invalidate files from file-system and delete expired files automatically without need of triggering .invalidate()    enableMonitoring   boolean  false  Enabled monitoring which exposes cache.monitoring.get(), cache.monitoring.reset()  Hash Options     type   THashOptions   =   'RSA-MD5'   |   'RSA-RIPEMD160'   |   'RSA-SHA1'   |   'RSA-SHA1-2'   |   'RSA-SHA224'   |   'RSA-SHA256'   |   'RSA-SHA3-224'   |   'RSA-SHA3-256'   |   'RSA-SHA3-384'   |   'RSA-SHA3-512'   |   'RSA-SHA384'   |   'RSA-SHA512'   |   'RSA-SHA512/224'   |   'RSA-SHA512/256'   |   'RSA-SM3'   |   'blake2b512'   |   'blake2s256'   |   'id-rsassa-pkcs1-v1_5-with-sha3-224'   |   'id-rsassa-pkcs1-v1_5-with-sha3-256'   |   'id-rsassa-pkcs1-v1_5-with-sha3-384'   |   'id-rsassa-pkcs1-v1_5-with-sha3-512'   |   'md5'   |   'md5-sha1'   |   'md5WithRSAEncryption'   |   'ripemd'   |   'ripemd160'   |   'ripemd160WithRSA'   |   'rmd160'   |   'sha1'   |   'sha1WithRSAEncryption'   |   'sha224'   |   'sha224WithRSAEncryption'   |   'sha256'   |   'sha256WithRSAEncryption'   |   'sha3-224'   |   'sha3-256'   |   'sha3-384'   |   'sha3-512'   |   'sha384'   |   'sha384WithRSAEncryption'   |   'sha512'   |   'sha512-224'   |   'sha512-224WithRSAEncryption'   |   'sha512-256'   |   'sha512-256WithRSAEncryption'   |   'sha512WithRSAEncryption'   |   'shake128'   |   'shake256'   |   'sm3'   |   'sm3WithRSAEncryption'   |   'ssl3-md5'   |   'ssl3-sha1'\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":29,"path":30,"dir":31,"title":32,"description":7,"keywords":33,"body":39},"content:2.api:1.functions.md","/api/functions","api","Functions",[34,35,36,37,38],"Set","Get","Flush all","Flush by Regex","Option enableMonitoring is set to true","  Functions  Available Methods   Set     const   myPayload   =   { id:   1  , name:   'John'  , surname:   'Doe'   }\n   await   cache.  set  ({ fileName:   'myFileName'  , key:   'myUniqueKey'  , payload: myPayload, ttl:   3600   })\n   // Stored as: myFileName hash_97c44f6f39acc990c8927e92168a61e2a3a1c9441679a1db76a1132562eb4ba6\n   Get     const   data   =   await   cache.  get  ({ fileName:   'myFileName'  , key:   'myUniqueKey'   });\n   // Gets cached data as: {\"id\":1,\"name\":\"John\",\"surname\":\"Doe\"}\n   Flush all     await   cache.  flushAll  ();\n   // Deletes all cached files\n   Flush by Regex      await   cache.  flushByRegex  (  'myFileName'  );\n   // or for multiple matches in file name\n   await   cache.  flushByRegex  (  'myFileName'  ,   'secondMatchValue'  );\n     await   cache.  set  ({ fileName:   'myFileName'  , key:   'myUniqueKey'  , payload: myPayload })   // Will delete\n   await   cache.  set  ({ fileName:   'myFileName'  , key:   'myUniqueKey'  , payload: myPayload })   // Will delete\n   await   cache.  set  ({ fileName:   'myFileNameDifferent'  , key:   'myUniqueKey'  , payload: myPayload })   // Will not delete\n   await   cache.  flushByRegex  (  'myFileName'  );\n     await   cache.  set  ({ fileName:   'john doe'  , key:   'myUniqueKey'  , payload: myPayload })   // Will not delete\n   await   cache.  set  ({ fileName:   'john doe engineer'  , key:   'myUniqueKey'  , payload: myPayload })   // Will delete\n   await   cache.  flushByRegex  (  'john'  ,   'engineer'  );\n   Option   enableMonitoring  is set to   true  Get Logs      const   logs   =   cache.monitoring?.  get  ()\n     {\n       \"logs\"  : [\n           {\n             \"id\"  :   \"number\"  ,\n             \"bytes\"  :   \"number\"  ,\n             \"megabytes\"  :   \"number\"  ,\n             \"storedFilesCount\"  :   \"number\"  ,\n             \"date\"  :   \"Date\"  ,\n             \"count\"  : {\n               \"success\"  : {\n                 \"set\"  :   \"number\"  ,\n                 \"get\"  :   \"number\"  ,\n                 \"invalidate\"  :   \"number\"  ,\n                 \"validateFile\"  :   \"number\"  ,\n                 \"flushByRegex\"  :   \"number\"  ,\n                 \"flushAll\"  :   \"number\"\n                   },\n               \"error\"  : {\n                 \"set\"  :   \"number\"  ,\n                 \"get\"  :   \"number\"  ,\n                 \"invalidate\"  :   \"number\"  ,\n                 \"validateFile\"  :   \"number\"  ,\n                 \"flushByRegex\"  :   \"number\"  ,\n                 \"flushAll\"  :   \"number\"\n                   }\n               }\n           }\n       ],\n     \"count\"  : {\n       \"success\"  : {\n         \"set\"  :   \"number\"  ,\n         \"get\"  :   \"number\"  ,\n         \"invalidate\"  :   \"number\"  ,\n         \"validateFile\"  :   \"number\"  ,\n         \"flushByRegex\"  :   \"number\"  ,\n         \"flushAll\"  :   \"number\"\n       },\n       \"error\"  : {\n         \"set\"  :   \"number\"  ,\n         \"get\"  :   \"number\"  ,\n         \"invalidate\"  :   \"number\"  ,\n         \"validateFile\"  :   \"number\"  ,\n         \"flushByRegex\"  :   \"number\"  ,\n         \"flushAll\"  :   \"number\"\n       }\n     }\n   }\n  Reset Logs     cache.monitoring?.  reset  ()\n  html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",1710202913423]